// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  name  String @unique
  image String @default("")

  playlists        Playlist[]
  followed_artists FollowedArtist[]
  saved_albums     SavedAlbum[]
  saved_tracks     SavedTrack[]

  @@map(name: "users")
}

model Playlist {
  id          String @id @default(cuid())
  name        String
  description String
  image       String @default("")

  tracks  PlaylistTrack[]
  owner   User            @relation(fields: [ownerId], references: [id])
  ownerId String

  @@map(name: "playlists")
}

model Artist {
  id    String @id @default(cuid())
  name  String @unique
  header_image String @default("")
  image String @default("")

  albums   Album[]
  tracks   Track[]
  followed FollowedArtist[]

  @@map(name: "artists")
}

model Album {
  id             String @id @default(cuid())
  album_type     String
  name           String
  release_date   String
  image          String @default("")
  total_tracks   Int

  saved_by SavedAlbum[]
  tracks   Track[]
  artist   Artist       @relation(fields: [artistId], references: [id])
  artistId String

  @@map(name: "albums")
}

model Track {
  id           String @id @default(cuid())
  title        String
  duration     Int
  track_number Int
  play_count   Int    @default(691385)
  track_url    String @default("")

  playlist_tracks PlaylistTrack[]
  saved_tracks    SavedTrack[]
  artists         Artist[]
  album           Album           @relation(fields: [albumId], references: [id])
  albumId         String

  @@map(name: "songs")
}

model FollowedArtist {
  added_at DateTime @default(now())

  user     User   @relation(fields: [userId], references: [id])
  userId   String
  artist   Artist @relation(fields: [artistId], references: [id])
  artistId String

  @@id([artistId, userId])
  @@map(name: "followed_artists")
}

model SavedAlbum {
  added_at DateTime @default(now())

  user    User   @relation(fields: [userId], references: [id])
  userId  String
  album   Album  @relation(fields: [albumId], references: [id])
  albumId String

  @@id([albumId, userId])
  @@map(name: "saved_albums")
}

model SavedTrack {
  added_at DateTime @default(now())

  user    User   @relation(fields: [userId], references: [id])
  userId  String
  track   Track  @relation(fields: [trackId], references: [id])
  trackId String

  @@id([trackId, userId])
  @@map(name: "saved_tracks")
}

model PlaylistTrack {
  added_at DateTime @default(now())

  playlist   Playlist @relation(fields: [playlistId], references: [id])
  playlistId String
  track      Track    @relation(fields: [trackId], references: [id])
  trackId    String

  @@id([trackId, playlistId])
  @@map(name: "playlist_tracks")
}
